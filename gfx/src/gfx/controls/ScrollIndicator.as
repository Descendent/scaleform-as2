import flash.external.ExternalInterface;
import gfx.controls.Button;
import gfx.core.UIComponent;
/**
 * The CLIK ScrollIndicator displays the scroll position of another component, such as a multiline textField. It can be pointed at a textField to automatically display its scroll position. All list-based components as well as the TextArea have a scrollBar property which can be pointed to a ScrollIndicator or ScrollBar instance or linkage ID. 
 
	<b>Inspectable Properties</b>
	The inspectable properties of the ScrollIndicator are:<ul>
	<li><i>scrollTarget</i>: Set a TextArea or normal multiline textField as the scroll target to automatically respond to scroll events. Non-text field types have to manually update the ScrollIndicator properties.</li>
	<li><i>visible</i>: Hides the component if set to false.</li>
	<li><i>disabled</i>: Disables the component if set to true.</li>
	<li><i>offsetTop</i>: Thumb offset at the top. A positive value moves the thumb's top-most position higher.</li>
	<li><i>offsetBottom</i>: Thumb offset at the bottom. A positive value moves the thumb's bottom-most position lower.</li>
	<li><i>enableInitCallback</i>: If set to true, _global.CLIK_loadCallback() will be fired when a component is loaded and _global.CLIK_unloadCallback will be called when the component is unloaded. These methods receive the instance name, target path, and a reference the component as parameters.  _global.CLIK_loadCallback and _global.CLIK_unloadCallback should be overriden from the game engine using GFx FunctionObjects.</li>
	<li><i>soundMap</i>: Mapping between events and sound process. When an event is fired, the associated sound process will be fired via _global.gfxProcessSound, which should be overriden from the game engine using GFx FunctionObjects.</li></ul>
	
	<b>States</b> 
	The ScrollIndicator does not have explicit states. It uses the states of its child elements, the thumb and track Button components.
	
	<b>Events</b>
	All event callbacks receive a single Object parameter that contains relevant information about the event. The following properties are common to all events. <ul>
	<li><i>type</i>: The event type.</li>
	<li><i>target</i>: The target that generated the event.</li></ul>
		
	The events generated by the ScrollIndicator component are listed below. The properties listed next to the event are provided in addition to the common properties.<ul>
	<li><i>show</i>: The component’s visible property has been set to true at runtime.</li>
	<li><i>hide</i>: The component’s visible property has been set to false at runtime.</li>
	<li><i>scroll</i>: The scroll position has changed.<ul>
		<li><i>position</i>: The new scroll position. Number type. Values minimum position to maximum position. </li></ul></li></ul>
 */
intrinsic class gfx.controls.ScrollIndicator extends UIComponent
{
	/** Whether the component is horizontal or vertical. This property is auto-set on stage components based on their rotation. */
	public var direction : String;
	public var soundMap : Object;
	private var pageSize : Number;
	private var pageScrollSize : Number;
	private var minPosition : Number;
	private var maxPosition : Number;
	private var _position : Number;
	private var _scrollTarget : Object;
	private var inspectableScrollTarget : Object;
	private var offsetTop : Number;
	private var offsetBottom : Number;
	private var lastVScrollPos : Number;
	private var scrollerIntervalID : Number;
	private var isDragging : Boolean;
	private var scrollTargetSelection : Array;
	/** A reference to the thumb symbol in the ScrollIndicator. */
	public var thumb : Button;
	/** A reference to the track symbol in the ScrollIndicator. */
	public var track : MovieClip;

	public function get disabled() : Boolean;
	public function set disabled(value:Boolean) : Void;

	/** 
	 * Set the scroll position to a number between the minimum and maximum.
	 */
	public function get position() : Number;
	public function set position(value:Number) : Void;

	/**
	 * Set a text target for the ScrollIndicator to respond to scroll changes.  
	 	Non-text fields have to manually update the properties.
	 */
	public function get scrollTarget() : Object;
	public function set scrollTarget(value:Object) : Void;

	/**
	 * Returns the available scrolling height of the component.
	 */
	public function get availableHeight() : Number;


	/**
	 * The constructor is called when a ScrollIndicator or a sub-class of ScrollIndicator is instantiated on stage or by using {@code attachMovie()} in ActionScript. This component can <b>not</b> be instantiated using {@code new} syntax. When creating new components that extend ScrollIndicator, ensure that a {@code super()} call is made first in the constructor.
	 */
	public function ScrollIndicator();

	/**
	 * Set the scroll properties of the component.
	 * @param pageSize The size of the pages to determine scroll distance.
	 * @param minPosition The minimum scroll position.
	 * @param maxPosition The maximum scroll position.
	 * @param pageScrollSize The amount to scroll when "paging". Not currently implemented.
	 */
	public function setScrollProperties(pageSize:Number, minPosition:Number, maxPosition:Number, pageScrollSize:Number) : Void;

	/**
	 * Manually update the scrollBar when the target changes.
	 */
	public function update() : Void;

	/** @exclude */
	public function toString() : String;

	private function configUI() : Void;

	private function draw() : Void;

	private function updateThumb() : Void;

	private function onScroller() : Void;

	private function scrollerDelayUpdate() : Void;

}